{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Article.tsx","components/lazyPage/ArticlePage.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Article","props","markdown","style","useState","article","setArticle","componentIsMounted","useRef","width","useWindowSize","delay","useDelayRender","defaultArticleStyle","css","textTheme","paddingLeft","paddingTop","fontSize","marginBottom","overflow","useEffect","current","fn","a","console","log","content","self","this","args","arguments","apply","err","undefined","fetchArticle","Content","wordBreak","className","dangerouslySetInnerHTML","__html","color","fontWeight","SourceList","sources","header","source","Container","fluid","map","s","idx","Row","text","link","ogColor","onHoverColor","element","row","ArticlePage","id","useParams","allDB","get","Number","parseInt"],"mappings":"kNAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,G,oECAhC,SAASS,EAAQC,GAGpB,IACKC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,MADhB,EAE6BC,mBAAiB,IAF9C,mBAEMC,EAFN,KAEeC,EAFf,KAGKC,EAAqBC,kBAAO,GAC3BC,EAASC,cAATD,MACDE,EAAQC,YAAe,KACvBC,EAAsBC,cAAIC,IAAW,CACzCC,YAAaP,EAAQ,IAAO,OAAS,OACrCQ,WAAYR,EAAQ,IAAO,OAAS,MACpCS,SAAUT,EAAQ,IAAO,MAAQ,QACjCU,aAAc,QACdC,SAAU,WAKZC,qBAAU,WACR,OAAO,WACLd,EAAmBe,SAAU,KAE9B,IAEHD,qBAAU,YACU,eDtBoBE,ECsBpB,GDtBoBA,ECsBpB,UAAG,8BAAAC,EAAA,sEAEjBC,QAAQC,IAAR,OAAYxB,QAAZ,IAAYA,OAAZ,EAAYA,EAAUyB,SAFL,gBAGIzB,QAHJ,IAGIA,OAHJ,EAGIA,EAAUyB,QAHd,oJAG0B,gBAH1B,QAGXhC,EAHW,KAIbY,EAAmBe,SACrBhB,EAAWX,GALI,kDAQjB8B,QAAQ7B,MAAR,MARiB,yDDrBhB,WACL,IAAIgC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIjC,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMoC,EAAGS,MAAMJ,EAAME,GAEzB,SAASxC,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAO0C,GACd/C,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS0C,GAGnE3C,OAAM4C,QCOU,qDAWlBC,KACC,IAEH,IAAMC,EAAU,kBACd,oCACE,wBAAStB,cAAI,CACXL,MAAO,MACP4B,UAAW,aACXlB,aAAc,UAEd,yBAAKmB,UAAU,UAAUC,wBAAyB,CAACC,OAAQnC,MAE7D,6BACA,wBAAIF,MACF,CACEsC,MAAO,UACPC,WAAY,WAHhB,UAKA,kBAACC,EAAD,CAAYC,QAAO,OAAE1C,QAAF,IAAEA,OAAF,EAAEA,EAAU2C,OAAOC,WAI1C,OACE,kBAACC,EAAA,EAAD,eAAWC,MAAM,KAAKV,UAAU,aAAhC,OAAgDnC,QAAhD,IAAgDA,IAASU,GAErDF,EAAQ,kBAACyB,EAAD,MAAc,+BAM9B,SAASO,EAAW1C,GAAmC,IAC9C2C,EAAW3C,EAAX2C,QAiBP,OACE,kBAACG,EAAA,EAAD,YAEIH,QAFJ,IAEIA,OAFJ,EAEIA,EAASK,KAAI,SAACC,EAAGC,GAAJ,OAnBP,SAACL,EAAgBK,GAC3B,OACE,kBAACC,EAAA,EAAD,CAAK5D,IAAK2D,GACR,kBAAC,IAAD,CAAWE,KAAMP,EACfQ,KAAMR,EACNS,QAAS,UACTC,aAAc,aACdC,QAAS,SAACP,GAAD,OACP,0BAAMZ,UAAU,eACbY,OAUkBQ,CAAIR,EAAGC,O,mBChGzB,SAASQ,IAAe,IAC9BC,EAAMC,cAAND,GACD1D,EAAW4D,IAAMC,IAAIC,OAAOC,SAASL,IAC3C,OAAQ,kBAAC,EAAD,CAAS1D,SAAUA","file":"static/js/3.c13d6da7.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, {useEffect, useState, useRef} from 'react';\nimport {Container, Row} from 'react-bootstrap';\nimport {StyleAttribute, css} from 'glamor';\nimport {Markdown} from '../state/markdowns';\nimport {textTheme} from '../styles/styleElements';\nimport {HoverLink, toNormalP} from './Misc';\nimport {useWindowSize, useDelayRender} from '../state/hooks';\nimport '../styles/Article.css';\n\n// article compoenent. It insert parsed markown JSX element\n// into card container.\n// the style can be controlled by style parameter.\nexport function Article(props: {\n  markdown?: Markdown,\n  style?: StyleAttribute,\n}) {\n  const {markdown, style} = props;\n  const [article, setArticle] = useState<string>(\"\");\n  const componentIsMounted = useRef(true);\n  const {width} = useWindowSize();\n  const delay = useDelayRender(100);\n  const defaultArticleStyle = css(textTheme, {\n    paddingLeft: width > 1000 ? \"60px\" : \"20px\",\n    paddingTop: width > 1000 ? \"30px\" : \"0px\",\n    fontSize: width > 1000 ? \"1em\" : \"0.7em\",\n    marginBottom: \"100px\",\n    overflow: \"hidden\",\n  });\n\n\n  // avoid asyc complete after component is unmounted.\n  useEffect(() => {\n    return () => {\n      componentIsMounted.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchArticle = async () => {\n      try {\n        console.log(markdown?.content);\n        const value = (await markdown?.content) ?? \"Oppsy Doopsy!\";\n        if (componentIsMounted.current) {\n          setArticle(value);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchArticle();\n  }, []);\n\n  const Content = () => (\n    <>\n      <div {...css({\n        width: \"90%\",\n        wordBreak: \"break-word\",\n        marginBottom: \"100px\"\n      })}>\n        <div className=\"Article\" dangerouslySetInnerHTML={{__html: article}} />\n      </div>\n      <hr />\n      <h3 style={\n        {\n          color: \"DimGray\",\n          fontWeight: \"bolder\"\n        }}>Source</h3>\n      <SourceList sources={markdown?.header.source} />\n    </>\n  );\n\n  return (\n    <Container fluid=\"lg\" className=\"page-body\" {...style ?? defaultArticleStyle} >\n      {\n        delay ? <Content /> : <div />\n      }\n    </Container>\n  );\n}\n\nfunction SourceList(props: {sources?: Array<string>}) {\n  const {sources} = props;\n  const row = (source: string, idx: number) => {\n    return (\n      <Row key={idx}>\n        <HoverLink text={source}\n          link={source}\n          ogColor={\"DimGray\"}\n          onHoverColor={\"LightCoral\"}\n          element={(s: string) => (\n            <span className=\"source-list\" >\n              {s}\n            </span>)\n          }\n        />\n      </Row>\n    )\n  };\n  return (\n    <Container>\n      {\n        sources?.map((s, idx) => row(s, idx))\n      }\n    </Container>\n  )\n}\n","import React from 'react';\nimport {Article} from '../Article';\nimport {allDB} from '../../state/markdowns';\nimport {useParams} from 'react-router-dom';\n\nexport default function ArticlePage() {\n  const {id} = useParams();\n  const markdown = allDB.get(Number.parseInt(id as string));\n  return (<Article markdown={markdown} />);\n}\n"],"sourceRoot":""}