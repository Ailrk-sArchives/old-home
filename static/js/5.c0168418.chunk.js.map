{"version":3,"sources":["components/lazyPage/DiaryChronoListPage.tsx"],"names":["int2ChineseDigit","n","Let","v","In","int2ChineseNumber","toString","split","ns","length","len","map","idx","idx1","Number","parseInt","int2ChineseNumTag","join","DiaryChronoList","width","useWindowSize","delay","useDelayRender","diaries","chronoLists","diaryChronoLists","Content","diary","header","time","title","id","time1","Date","setDate","getDate","date","year","getFullYear","month","getMonth","day","console","log","toChineseDate","text","link","process","ogColor","onHoverColor","element","e","className","style","marginLeft","pageTitle","page"],"mappings":"8HAAA,iEAkBA,SAASA,EAAiBC,GACxB,OAAQA,GACN,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,GAAI,MAAO,SAChB,QACE,MAAO,UAcb,SAASC,EAAUC,EAAMC,GACvB,OAAOA,EAAGD,GAGZ,SAASE,EAAkBJ,GACzB,OAAOC,EAAID,EAAEK,WAAWC,MAAM,KAAK,SAACC,GAAD,OACjCN,EAAIM,EAAGC,OAAS,GAAG,SAACC,GAAD,OACjBF,EAAGG,KAAI,SAACV,EAAGW,GAAJ,OACLV,EAAIQ,EAAME,GAAK,SAACC,GAAD,OAKP,KAALZ,GAAmB,GAAPS,GAAoB,GAARG,GACf,KAALZ,GAAmB,GAAPS,GAAoB,GAARG,EACzB,GACAb,EAAiBc,OAAOC,SAASd,KA1B/C,SAA2BA,GACzB,OAAQA,GACN,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,SACf,QAAS,MAAO,IAqBRe,CAAkBH,eACzBI,KAAK,IAiDV,SAASC,IAAmB,IAClBC,EAAUC,cAAVD,MACJE,EAAQC,cACRC,EAAUC,IAAYC,iBAEtBC,EAAU,kBACZ,oCAEIH,EAAQZ,KAAI,SAAAgB,GAAU,IAAD,EAKfA,EAAMC,OAHRC,EAFiB,EAEjBA,KACAC,EAHiB,EAGjBA,MACAC,EAJiB,EAIjBA,GAMEC,EAAQ,IAAIC,KAAKJ,GACrBG,EAAME,QAAQF,EAAMG,UAAY,GAChC,IAAMC,EAjChB,SAAuBP,GACrB,IAAMQ,EAAOR,EAAKS,cAAgB,SAC5BC,EAAK,UAAMlC,EAAkBwB,EAAKW,WAAa,GAA1C,UACLC,EAAG,UAAMpC,EAAkBwB,EAAKM,WAA7B,UAOT,OALAO,QAAQC,IAAId,GAKN,GAAN,OAAUQ,GAAV,OAAiBE,EAAjB,YAA0BE,GAuBLG,CAAcZ,GAE3B,OAEE,kBAAC,IAAD,CAAWa,KAAM,kBAAMT,EAAN,WAAiBN,EAChCgB,KAAI,UAAKC,QAAL,oBAAuChB,GAC3CiB,QAAS,QACTC,aAAc,aACdC,QAAS,SAAAC,GAAC,OAAK,wBAAIC,UAAU,cAAcD,WAKvD,OACE,kBAAC,IAAD,CAAWC,UAAU,aAAaC,MAAOlC,EAAQ,IAAM,GAAK,CAAEmC,WAAY,KAEtEjC,EAAQ,kBAACK,EAAD,MAAc,+BAvIf,qBACb,OAAO,kBAAC,IAAD,CAAc6B,UAAW,qBAAOC,KAAM,kBAACtC,EAAD","file":"static/js/5.c0168418.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Container } from 'react-bootstrap';\nimport { AddPageTitle, HoverLink } from '../Misc';\nimport { FaLink } from \"react-icons/fa/index\";\nimport { useWindowSize } from '../../state/hooks';\nimport { useDelayRender } from '../..//state/hooks';\nimport { diaryDB, chronoLists } from '../../state/markdowns';\n\n\nimport \"./DiaryChronoListPage.css\";\n\n// ArticleChronoListPage\nexport default () => {\n  return <AddPageTitle pageTitle={\"碎碎念\"} page={<DiaryChronoList />} />;\n}\n\nfunction int2ChineseDigit(n: number): string {\n  switch (n) {\n    case 0: return \"零\";\n    case 1: return \"一\";\n    case 2: return \"二\";\n    case 3: return \"三\";\n    case 4: return \"四\";\n    case 5: return \"五\";\n    case 6: return \"六\";\n    case 7: return \"七\";\n    case 8: return \"八\";\n    case 9: return \"九\";\n    case 10: return \"十\";\n    default:\n      return \"零\";\n  }\n}\n\nfunction int2ChineseNumTag(n: number): string {\n  switch (n) {\n    case 1: return \"十\";\n    case 2: return \"百\";\n    case 3: return \"千\";\n    case 4: return \"万\";\n    default: return \"\";\n  }\n}\n\nfunction Let<T, R>(v: T, In: (v: T) => R): R {\n  return In(v);\n}\n\nfunction int2ChineseNumber(n: number) {\n  return Let(n.toString().split(\"\"), (ns: string[]) => (\n    Let(ns.length - 1, (len: number) => (\n      ns.map((n, idx) => (\n        Let(len - idx, (idx1: number) =>\n          // supports two digits only.\n          // 10\n          // 01\n          // 10\n          (n == \"1\" && len == 1 && idx1 == 1\n            || n == \"0\" && len == 1 && idx1 == 0\n            ? \"\"\n            : int2ChineseDigit(Number.parseInt(n)))\n          + int2ChineseNumTag(idx1))))))\n  )).join(\"\");\n}\n\nfunction toChineseYear(time: Date) {\n  return time\n    .getFullYear()\n    .toString()\n    .split(\"\")\n    .map((n => int2ChineseDigit(Number.parseInt(n))))\n    .concat([\"年\"])\n    .join(\"\");\n}\n\n\nfunction monthLength(n: number) {\n  switch (n) {\n    case 1:\n    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case 10:\n    case 12:\n      return 31;\n    case 2:\n      return 28;\n    default:\n      if (n > 12 || n < 1) {\n        console.error(\"Invalid month\");\n        return 1;\n      } else {\n        return 30;\n      }\n  }\n}\n\nfunction toChineseDate(time: Date) {\n  const year = time.getFullYear() + \"年\";\n  const month = `${int2ChineseNumber(time.getMonth() + 1)}月`;\n  const day = `${int2ChineseNumber(time.getDate())}日`;\n\n  console.log(time);\n\n  //\n  // [0, 11]\n\n  return `${year}${month} ${day}`\n}\n\nfunction DiaryChronoList() {\n  const { width } = useWindowSize();\n  let delay = useDelayRender();\n  let diaries = chronoLists.diaryChronoLists;\n\n  let Content = () => (\n    <>\n      {\n        diaries.map(diary => {\n          const {\n            time,\n            title,\n            id,\n          } = diary.header;\n\n          // NOTE: javascript will read 2021-09-01 as 2021-08-31,\n          // very intereting :(.\n          // you need to remember convert it back by add 1.\n          let time1 = new Date(time);\n          time1.setDate(time1.getDate() + 1);\n          const date = toChineseDate(time1);\n\n          return (\n            //  「${date}」 ﹁${date}﹂\n            <HoverLink text={`  「${date}」 ` + title}\n              link={`${process.env.PUBLIC_URL}/#/diary/${id}`}\n              ogColor={\"black\"}\n              onHoverColor={\"LightCoral\"}\n              element={e => (<h5 className=\"diary-info\">{e}</h5>)} />);\n        })\n      }\n    </>\n  );\n  return (\n    <Container className=\"diary-page\" style={width > 600 ? {} : { marginLeft: 30 }}>\n      {\n        delay ? <Content /> : <div />\n      }\n    </Container>\n  );\n}\n"],"sourceRoot":""}