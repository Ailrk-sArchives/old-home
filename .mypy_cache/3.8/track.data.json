{".class": "MypyFile", "_fullname": "track", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Path": {".class": "SymbolTableNode", "cross_ref": "pathlib.Path", "kind": "Gdef"}, "PathPipe": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "track.PathPipe", "name": "PathPipe", "type_vars": []}, "flags": [], "fullname": "track.PathPipe", "metaclass_type": null, "metadata": {}, "module_name": "track", "mro": ["track.PathPipe", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "pathname"], "flags": [], "fullname": "track.PathPipe.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "pathname"], "arg_types": ["track.PathPipe", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of PathPipe", "ret_type": {".class": "NoneType"}, "variables": []}}}, "filename": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready"], "fullname": "track.PathPipe.filename", "name": "filename", "type": "builtins.str"}}, "pathname": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready"], "fullname": "track.PathPipe.pathname", "name": "pathname", "type": "builtins.str"}}, "persistent_path": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready"], "fullname": "track.PathPipe.persistent_path", "name": "persistent_path", "type": "pathlib.Path"}}, "track_path": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready"], "fullname": "track.PathPipe.track_path", "name": "track_path", "type": "pathlib.Path"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.__package__", "name": "__package__", "type": "builtins.str"}}, "abuf": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.abuf", "name": "abuf", "type": "pathlib.Path"}}, "argparse": {".class": "SymbolTableNode", "cross_ref": "argparse", "kind": "Gdef"}, "args": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "track.args", "name": "args", "type": "argparse.Namespace"}}, "articles": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.articles", "name": "articles", "type": "pathlib.Path"}}, "filename": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.filename", "name": "filename", "type": "builtins.str"}}, "os": {".class": "SymbolTableNode", "cross_ref": "os", "kind": "Gdef"}, "parse_args": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "track.parse_args", "name": "parse_args", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "parse_args", "ret_type": "argparse.ArgumentParser", "variables": []}}}, "parser": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "track.parser", "name": "parser", "type": "argparse.ArgumentParser"}}, "pathlib": {".class": "SymbolTableNode", "cross_ref": "pathlib", "kind": "Gdef"}, "pp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "track.pp", "name": "pp", "type": "track.PathPipe"}}, "root": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "track.root", "name": "root", "type": "pathlib.Path"}}, "track": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["pp"], "flags": [], "fullname": "track.track", "name": "track", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["pp"], "arg_types": ["track.PathPipe"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "track", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "untrack": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["pp"], "flags": [], "fullname": "track.untrack", "name": "untrack", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["pp"], "arg_types": ["track.PathPipe"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "untrack", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "path": "/home/jimmy/newDisk/Repo/home/scripts/track.py"}